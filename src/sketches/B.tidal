cps (0.8)

b1
$ whenmod 3 2 (density 1.5 . (|+| x (scale 0 100 $ slow 32 $ sine1)))
$ stack [
every 5 (slow 1.5)
$ every 2 (|+| x "20")
$ color "1*12"
  |=| width (scale 0.3 2.5 $ slow 4 $ tri1)
  |*| x (scale 0.5 1 $ slow 13 $ tri1)
  |+| x (scale 0 80 $ slow 18 $ tri1)
  |=| x (scale 0 199 $ slow 8 $ tri1)
  |=| life (scale 0.5 1.5 $ slow 32 $ tri1),
jux ((|*| width "0.8") . slow 4 . striate 3)
$ every 3 (slow 2)
$ color "1*12"
  |*| width (scale 0.1 1 $ slow 4 $ tri1)
  |=| width (scale 0.5 2 $ slow 4 $ tri1)
  |*| x (scale 0.8 1 $ slow 4 $ tri1)
  |=| x (scale 0 100 $ slow 2 $ tri1)
  |=| life (scale 0.5 1.5 $ slow 32 $ sine1)
]














hush

b1 $ stack [
jux (rev . (|*| width "0.5") . (|*| life "0.9") . |+| x "-90")
$ whenmod 5 2 (density 1.5)
$ every 3 (|+| x "-20")
  $ color "1*12"
  |=| width (scale 0.5 2 $ slow 16 $ sine1)
  |+| x (scale 0 100 $ slow 4 $ sine1)
  |=| life (scale 1 2 $ slow 32 $ sine1),
color "1*11"
  |=| x (scale 0 100 $ slow 0.5 $ sine1)
  |=| width "0.2"
  |=| life (scale 0.5 1 $ slow 4 $ sine1)
]













































import Sound.Tidal.OscStream

let bar = Shape {
      params = [ I "color" (Just 0),
                 F "width" (Just 1),
                 F "x" (Just 0),
                 F "life" (Just 1)
               ],
      cpsStamp = False,
      latency = 0
      }
    barSlang = OscSlang {path = "/note",
                            timestamp = NoStamp,
                            namedParams = True,
                            preamble = []
                           }
    barStream = do
      s <- makeConnection "127.0.0.1" 8010 barSlang
      stream (Backend s $ (\_ _ _ -> return ())) bar
    color        = makeI bar "color"
    width        = makeF bar "width"
    x            = makeF bar "x"
    life         = makeF bar "life"

b1 <- barStream
b2 <- barStream
b3 <- barStream
b4 <- barStream
b5 <- barStream

b1 $ silence
